var __index = {"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"About Me","text":"<p>Hi, I'm Scott.</p> <p>I'm a former quantitative researcher and passionate developer interested in web development, APIs, and tons of other things.</p> <p>I'm currently located in the Boston area.</p> <p>These days, I mostly write in \ud83d\udc0d Python but hope to explore other languages like C++, Rust and TypeScript.</p> <p>\ud83c\udf99 Update: I'll be starting \ud83d\udcda graduate school this upcoming Spring 2024.</p>"},{"location":"index.html#contact","title":"\ud83d\udce9 Contact","text":"<ul> <li>\ud83d\udce7 scottcarvalho71@gmail</li> <li>\ud83d\udc26 twitter.com/ScottCarvalho_</li> <li>\ud83d\udd17 linkedin.com/in/scottcarvalho</li> <li>\ud83d\udc7e github.com/Scarvy</li> </ul>"},{"location":"index.html#technical-skills","title":"\ud83d\udc68\u200d\ud83d\udcbb Technical Skills","text":"<ul> <li>Programming Languages: Python, JavaScript, Java, MATLAB</li> <li>Python Packages: Matplotlib, Pandas, Numpy, Dash Plotly</li> <li>Technologies: Git, GitHub</li> </ul>"},{"location":"index.html#papers-and-talks","title":"\ud83d\udcc4 Papers and \ud83d\udde3 Talks","text":"<ul> <li>\ud83d\udcc4 Paper: Whitmore, T., Carvalho, S., Wang S., (2021). Integrating ESG Considerations into Securities Lending. The Risk Management Association</li> <li>\ud83d\udde3 Talk: State Street Research Retreat Fall 2022 -\u00a0\"Wisdom of the Crowd For Stock Analysis\"</li> <li>\ud83d\udde3 Talk: State Street Virtual Research Retreat Fall 2021 -\u00a0Country Scorecard - New Measure for Countries</li> </ul>"},{"location":"index.html#testimonials","title":"\ud83d\udc65 Testimonials","text":"<ul> <li> <p>\u201cScott\u2019s technical mastery, general curiosity, growth mindset, and wide range of capabilities, he would be a dream fit for any institution.\u00a0 He was always eager to enhance his skills and take on new challenges... has a natural sense of ownership, collaborates easily and productively, and can smell a good solution to a problem, and has what I can only call a grasp of the aesthetics of good software design (he naturally grasps the time to effect modularity and how to factor code into pieces of the right size and focus).\u201d</p> </li> <li> <p>\"\"Scott has demonstrated an ability to work well across a matrix environment, quickly adapting and expanding his scope while delivering high-value projects... [and] has really shown what it means to have a change management mindset, proposing new ways of developing projects that will improve efficiency and production time.\"</p> </li> </ul>"},{"location":"index.html#resume","title":"\ud83d\udccb Resume","text":"<p>You can view my CV here</p>"},{"location":"blog/index.html","title":"Blog","text":""},{"location":"blog/2023/07/12/welcome.html","title":"Welcome","text":"<p>I'll use this blog to document my progress in various personal development areas: programming, language learning, critical thinking, and writing. I will share my experiences along the way.</p> <p></p>","tags":["Welcome","Introduction","Personal"]},{"location":"blog/2023/07/13/building-a-static-website-using-pelican.html","title":"Building a static website using Pelican","text":""},{"location":"blog/2023/07/13/building-a-static-website-using-pelican.html#intro","title":"Intro","text":"<p>If you're looking to create a personal blog or website, I found Pelican is an excellent option for generating static web pages. Pelican is a Python-based static site generator that is easy to use and allows you to create content in Markdown or reStructuredText format.</p> <p>To host my website, GitHub has a service called GitHub Pages that lets users host personal websites for free!</p> <p>In this guide, I'll walk you through the steps to build a website using Pelican and Github Pages.</p>"},{"location":"blog/2023/07/13/building-a-static-website-using-pelican.html#prerequisites","title":"Prerequisites","text":"<p>Before we get started, you'll need the following:</p> <ol> <li>Python 3.x installed on your computer</li> <li>A Github account</li> <li>Git installed on your computer</li> </ol>"},{"location":"blog/2023/07/13/building-a-static-website-using-pelican.html#step-1-create-a-new-pelican-project","title":"Step 1: Create a New Pelican Project","text":"<p>To create a new Pelican project, I recommend creating a virtual environment.</p> <p>I use pyenv. Open a terminal window and run the following command:</p> <pre><code>pyenv virtualenv &lt;python_version&gt; &lt;virtualenv_name&gt;\npyenv activate &lt;virtualenv_name&gt;\n</code></pre> <p>Example:</p> <pre><code>pyenv virtualenv 3.9.15 myenv\npyenv activate myenv\n</code></pre> <p>Next, create a new project directory and navigate to that directory with these commands:</p> <pre><code>(myenv) $ mkdir project_name\n(myenv) $ cd project_name\n</code></pre> <p>Once you are in the project folder, run the following commands:</p> <pre><code>(myenv) ./project_name $ pip install pelican\n(myenv) ./project_name $ pelican-quickstart\n</code></pre> <p>After entering <code>pelican-quickstart</code> the terminal will ask you a series of questions about how you want to set up your new Pelican project. Select the \"GitHub Pages\" option when asked about deployment.</p> <p>The content directory should look like this after running the <code>pelican-quickstart</code> command:</p> <pre><code>(myenv) ./project_name $ tree\n.\n\u251c\u2500\u2500 content\n\u251c\u2500\u2500 Makefile\n\u251c\u2500\u2500 pelicanconf.py\n\u2514\u2500\u2500 publishconf.py\n\nThree directories, five files\n</code></pre> <p>In this example, we can see the directory structure of the Pelican project, which includes the content directory where you can place your Markdown and reStructuredText documents, as well as any other content such as images, PDFs, and more. The project includes a <code>Makefile,</code> <code>pelicanconf.py,</code> and <code>publishconf.py</code> file.</p> <ul> <li><code>Makefile</code> provides pre-built bash commands to build or deploy your website.</li> <li><code>pelicanconf.py</code> configure the site's settings during the development phase</li> <li><code>publishconf.py</code> used for the production phase</li> </ul>"},{"location":"blog/2023/07/13/building-a-static-website-using-pelican.html#step-2-create-and-customize-your-content","title":"Step 2: Create and Customize Your Content","text":"<p>With your new Pelican project, you can create and customize your content in Markdown or reStructuredText format. You can add new pages, blog posts, and custom templates to make your site unique.</p> <p>(I used the Papyrus theme that you can download here. Follow their instructions on how to set up the theme.)</p>"},{"location":"blog/2023/07/13/building-a-static-website-using-pelican.html#step-3-build-your-site","title":"Step 3: Build Your Site","text":"<p>To build your site, run the following command in your terminal:</p> <pre><code>(myenv) ~/project_name $ pelican content\n</code></pre> <p>The command will generate your static web pages in the output directory.</p>"},{"location":"blog/2023/07/13/building-a-static-website-using-pelican.html#step-4-create-a-github-repository","title":"Step 4: Create a GitHub Repository","text":"<p>Next, you'll need to create a new repository on GitHub to host your Pelican site. Go to your Github account and create a new repository with the name <code>&lt;username&gt;</code>.github.io, where <code>&lt;username&gt;</code> is your Github username.</p> <p></p>"},{"location":"blog/2023/07/13/building-a-static-website-using-pelican.html#step-5-deploy-your-site-to-github-pages","title":"Step 5: Deploy Your Site to Github Pages","text":"<p>A Makefile is created in the project's root directory with pre-built bash commands to build or deploy your website.</p> <p>To deploy your Pelican site to Github Pages, change the <code>GITHUB_PAGES_BRANCH</code> constant in the Makefile to gh-pages.</p> <p>Next, run the following commands in your terminal:</p> <pre><code>(myenv) ./project_name $ make github\n</code></pre> <p>This command will generate your site and push it to the gh-pages branch of your GitHub repository.</p> <p>Next, navigate to your GitHub repo, and under the Settings tab, select the Pages menu. Under the Build and Deployment section, change the Branch setting to gh-pages.</p> <p>To check your website is deployed, go under the Actions tab and look for a green checkmark in the workflow that runs the status table. If so, your site should now be live at https://username.github.io/.</p>"},{"location":"blog/2023/07/13/building-a-static-website-using-pelican.html#conclusion","title":"Conclusion","text":"<p>Building a Pelican static blog generator page and hosting it on Github Pages is a great way to create a personal blog or website quickly and easily. With Pelican's simplicity and Github Pages' free hosting, you can get your site up and running quickly.</p> <p>For more information on using Pelican and Github Pages, check out the following resources:</p>"},{"location":"blog/2023/07/13/building-a-static-website-using-pelican.html#external-links","title":"External Links","text":"<ul> <li>Pelican documentation</li> <li>Github Pages documentation</li> </ul>"},{"location":"blog/2023/11/11/the-changelog-v010.html","title":"The Changelog - v0.1.0","text":"<p>I'm trying out a new format to encourage me to write more. I'm calling it the \u2728 Changelog \u2728.</p> <p>A changelog (also spelled change log) is a log or record of all notable changes made to a project. source</p> <p>However, in my case, I will be documenting significant changes in my life. Each changelog will follow the semantic versioning system, which is a standard approach used in software development to indicate changes in a project. These changes can be either major ( \ud83d\udea8 breaking!) or minor (\ud83e\ude79 patches). In this changelog, I will include updates on discoveries, project advancements, and any other noteworthy developments that I feel deserve an update - big or small.</p> <p>Without further ado, here is the first release of my Changelog! \ud83c\udf89 Version 0.1.0 \ud83c\udf89</p> <p>\ud83d\udcd5 Learned:</p> <ul> <li>\ud83d\udd78 I'm taking a web development course and became curious how Python web-frameworks like Django, Flask, and FastAPI work. Been enjoying reading these articles:<ul> <li>What is Gunicorn in Python</li> <li>What is Werkzeug</li> <li>What are WSGI and CGI in plain English</li> </ul> </li> <li>\ud83e\udd16 Exciting to try out OpenAI's new Assistants API in my projects.<ul> <li>OpenAI Assistant API</li> </ul> </li> <li>\ud83d\udcfc Pydantic is all you need video</li> </ul> <p>\u2728 New:</p> <ul> <li>\ud83d\udcc8 I've been aware of <code>yfinance</code> for years. Recently, I discovered a nice alternative <code>yahooquery</code>. The documentation is great and I wish <code>yfinance</code> had similar docuemntation and consistent docstrings like <code>yahooquery</code>.</li> <li>\ud83d\udc0d Saw a tweet about this cool Python package called Magentic which integrate LLMs as Python functions.</li> </ul> <p>\ud83d\udea8 Changed:</p> <ul> <li>Changed blog site to MkDocs-Material from Pelican.</li> </ul>"},{"location":"blog/2023/11/20/the-changelog-v020.html","title":"The Changelog - v0.2.0","text":"<p>It's the week before Thanksgiving \ud83e\udd83 and looking to wrap up a few things before the holiday season kicks into overdrive (already stressing about gift-giving! \ud83e\udd72). I digress...</p> <p>In this changelog, I'm changing the way I go about reading documentation and reminding myself of the importance of clean code. Also, highlight some tools I found this week and ones I enjoy using consistently. Lastly, a new project I'm working on to learn a new framework (hint: terminal \ud83d\udcbb + Python \ud83d\udc0d).</p> <p>Here is the latest release! \ud83c\udf89 Version 0.2.0 \ud83c\udf89.</p>"},{"location":"blog/2023/11/20/the-changelog-v020.html#rtfm","title":"RTFM \ud83e\udd2c \u27a1\ufe0f \ud83d\udcd6","text":"<p>When I stumble upon a \u2728 new package or library \u2728 that I think will solve my problems my next steps are as follows:</p> <ol> <li>Open documentation \u2935\ufe0f</li> <li>Read the intro \u2935\ufe0f</li> <li>Try the example (hopefully they have one \ud83e\udd1e) \u2935\ufe0f</li> <li>Then immediately dive into whatever problem I am trying to solve that led me to the package in the first place \u2935\ufe0f</li> </ol> <p>I thought that was a good strategy, but after reading a recent blog post my view on reading documentation has changed.</p> <p>\ud83d\udcd5 Read:</p> <ul> <li> <p>I stumbled upon this post by Aaron Franics \ud83d\ude4b\u200d\u2642\ufe0f that developers should read the docs like a book because it can help:</p> <ol> <li>Build a \"mental map\" \ud83e\udde0\ud83d\uddfa of the tool's features and functionality.</li> <li>Prime the subconscious to recognize new context and patterns \ud83e\uddd8\u200d\u2640\ufe0f.</li> <li>Extract more details. \ud83d\udd2c</li> <li>Make stronger connections \ud83e\udea2 to other other sources (eg. YouTube \ud83c\udfa5, Podcasts \ud83c\udf99, Courses \ud83c\udfdb etc.).</li> </ol> </li> </ul> <p>I'm trying to implement this strategy into the next framework I'm working with Textual</p> <p>I appreciate well-written code as much as the next developer and it is important because writing clean code helps to reduce cognitive load.</p> <p>\ud83e\udde0 \"People can typically hold up to 5\u20137 separate pieces of information in their short-term memory;...\"</p> <p>I think I hold less in my head \ud83d\ude35\u200d\ud83d\udcab, so I try to adhere to the best practices mentioned in this post to make functions small, single purpose, and return as often as possible \ud83e\udee1.</p> <p>One of my favorite writers on the web Trung Phan, writes about Brian Eno - the man behind the Windows 95 startup sound \ud83e\udd2f. \ud83c\udfa8 11 Creative Lessons from Brian Eno</p> <p>\ud83d\udde3 \"The idea that anything \u201cyou don\u2019t have to do\u201d is \u201cart\u201d is a universal. It permeates everyday life across cultures and time. It clearly serves a purpose. It gives us comfort. It is a way to express ourselves. It is a form of communication. It helps us bond. These are all crucial aspects of the human experience. If \u201cart\u201d didn\u2019t achieve any of these goals, our species wouldn\u2019t have been making such stylistic decisions for thousands of years.\"</p> <p>\ud83e\uddf0 Tools:</p> <ul> <li> <p>\ud83d\uddbc tldraw whiteboard with new AI capability to turn any sketch into a working prototype.</p> </li> <li> <p>\u2328\ufe0f Cursor - AI-powered IDE. A fork of VSCode.</p> </li> <li> <p>\ud83e\udd98 + \ud83d\udc0d = [Mockaroo] is a tool for generating mock data quickly. I even wrote a Python library around its API for those Django and Python web developers in mind. Check it out here.</p> </li> </ul> <p>\u2728 New:</p> <ul> <li> <p>Started a new book A Philosophy of Software Design.</p> </li> <li> <p>Started a new project that uses Textual and Yahoo! Finance API to build a stock screener. The goal of this project is to learn more about the Textual framework and apply some of the lessons from Aaron Francis's article about reading the documentation like a book.\u2934\ufe0f.</p> </li> </ul>"},{"location":"blog/archive/2023.html","title":"2023","text":""},{"location":"blog/category/changelog.html","title":"Changelog","text":""},{"location":"blog/category/web-development.html","title":"web development","text":""},{"location":"blog/category/personal.html","title":"Personal","text":""}]}